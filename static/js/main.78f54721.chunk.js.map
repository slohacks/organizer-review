{"version":3,"sources":["assets/logo-white.png","assets/theme.png","index.js","reducers/auth.js","reducers/signup.js","reducers/forgotPassword.js","reducers/application.js","reducers/index.js","actions/types.js","config/firebase.js","containers/Application.jsx","actions/index.js","components/InputTypes/TextInput.jsx","components/Scenic.jsx","containers/SignUp.jsx","containers/Login.jsx","containers/ForgotPassword.jsx","containers/NotFound.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","require","INITIAL_STATE","authenticated","user","completedApplication","error","errorMessage","loading","fetching","data","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","Object","objectSpread","userCredential","message","newUser","lostPass","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","applicationsRef","collection","Application","_this$props","this","props","fetchApps","fetchApplications","match","params","uid","_this$props2","appData","tempCardStyle","display","minWidth","marginRight","marginBottom","react_default","a","createElement","CircularProgress_default","name","style","flexWrap","alignItems","Card_default","CardContent_default","concat","grad_date","gender","other_gender","ethnicity","other_ethnicity","college","city","email","phone","diet","allergies","Component","defaultProps","connect","dispatch","doc","get","then","application","exists","applicationData","catch","TextInput","_ref","input","label","disabled","placeholder","_ref$meta","meta","touched","errorExist","Boolean","TextField_default","assign","fullWidth","helperText","Scenic","id","className","href","src","logo","alt","theme","SignUp","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","handleClose","bind","assertThisInitialized","values","_this2","createAccount","signUp","setState","push","history","handleSubmit","valid","components_Scenic","onSubmit","Field","component","Button_default","variant","color","onClick","marginLeft","Dialog_default","onClose","DialogContent_default","DialogContentText_default","FormHelperText_default","reduxForm","validate","errors","test","password","confirm_password","localeCompare","recaptcha","callback","createUserWithEmailAndPassword","currentUser","sendEmailVerification","Login","console","log","loginActionCreator","login","signInWithEmailAndPassword","emailVerified","ForgotPassword","forgotPass","forgotPassword","sendPasswordResetEmail","NotFound","createStoreWithMiddleware","createStore","reducers","applyMiddleware","ReduxThunk","ReactDOM","render","es","store","HashRouter","Switch","Route","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.78f54721.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.9a0ff8b1.png\";","module.exports = __webpack_public_path__ + \"static/media/theme.3b4ac690.png\";","require('./index.jsx');","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  user: {},\n  completedApplication: false,\n  error: false,\n  errorMessage: '',\n  loading: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.LOGIN_ATTEMPT:\n      return {\n        ...state,\n        error: false,\n        errorMessage: '',\n        loading: true,\n      };\n    case types.LOGIN_GUCCI:\n      return {\n        ...state,\n        authenticated: true,\n        error: false,\n        user: action.userCredential.user,\n        loading: false,\n      };\n    case types.LOGIN_FAIL:\n      return {\n        ...state,\n        error: true,\n        errorMessage: action.error.message,\n        loading: false,\n      };\n    case types.SIGN_OUT_GUCCI:\n      return {\n        ...state,\n        authenticated: false,\n        error: false,\n        user: {},\n      };\n    case types.SIGN_OUT_FAIL:\n      return {\n        ...state,\n        error: true,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  error: false,\n  errorMessage: '',\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SIGN_UP_ATTEMPT:\n      return {\n        ...state,\n        errorMessage: '',\n      };\n    case types.SIGN_UP_FAIL:\n      return {\n        ...state,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  error: false,\n  errorMessage: '',\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.FORGOT_PASS_ATTEMPT:\n      return {\n        ...state,\n        errorMessage: '',\n      };\n    case types.FORGOT_PASS_FAIL:\n      return {\n        ...state,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  error: false,\n  errorMessage: '',\n  fetching: true,\n  data: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.FETCH_GUCCI:\n      return {\n        ...state,\n        data: action.data,\n        fetching: false,\n      };\n    case types.FETCH_FAIL:\n      return {\n        ...state,\n        errorMessage: action.error.message,\n        fetching: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authentication from './auth';\nimport signup from './signup';\nimport forgotPassword from './forgotPassword';\nimport application from './application';\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  auth: authentication,\n  newUser: signup,\n  lostPass: forgotPassword,\n  app: application,\n});\n\nexport default rootReducer;\n","export const LOGIN_ATTEMPT = 'login_attempt';\nexport const LOGIN_GUCCI = 'login_gucci';\nexport const LOGIN_FAIL = 'login_fail';\nexport const FORGOT_PASS_ATTEMPT = 'forgot_pass_attempt';\nexport const FORGOT_PASS_GUCCI = 'forgot_pass_gucci';\nexport const FORGOT_PASS_FAIL = 'forgot_pass_fail';\nexport const SIGN_UP_ATTEMPT = 'sign_up_attempt';\nexport const SIGN_UP_GUCCI = 'sign_up_gucci';\nexport const SIGN_UP_FAIL = 'sign_up_fail';\nexport const SIGN_OUT_GUCCI = 'sign_out_gucci';\nexport const SIGN_OUT_FAIL = 'sign_out_fail';\nexport const FETCH_ATTEMPT = 'fetch_attempt';\nexport const FETCH_GUCCI = 'fetch_gucci';\nexport const FETCH_FAIL = 'fetch_fail';\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: 'AIzaSyBZcbyksEiROWXdBuRTzASzIDrUbttTwJk',\n  authDomain: 'attendee-application.firebaseapp.com',\n  databaseURL: 'https://attendee-application.firebaseio.com',\n  projectId: 'attendee-application',\n  storageBucket: 'attendee-application.appspot.com',\n  messagingSenderId: '667136836888',\n};\n\nfirebase.initializeApp(config);\n\nconst firestore = firebase.firestore();\n\nconst settings = {\n  timestampsInSnapshots: true,\n};\n\nfirestore.settings(settings);\n\nconst applicationsRef = firestore.collection('applications');\n\nexport { firebase, firestore, applicationsRef };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { fetchApplications } from '../actions/index';\n\nclass Application extends Component {\n  componentDidMount() {\n    const {\n      fetchApplications: fetchApps,\n      match: { params: { uid } },\n    } = this.props;\n\n    fetchApps(uid);\n  }\n\n  render() {\n    const { appData, errorMessage, fetching } = this.props;\n\n    const tempCardStyle = {\n      display: 'inline-block',\n      minWidth: 275,\n      marginRight: '1rem',\n      marginBottom: '1rem',\n    };\n\n    const rowStyle = {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'flex-start',\n    };\n\n    if (fetching) {\n      return (\n        <div>\n          <CircularProgress />\n        </div>\n      );\n    }\n\n    if (appData) {\n      return (\n        <div>\n          <h1>{appData.name}</h1>\n          <section>\n            <h2>Personal Info</h2>\n            <div style={rowStyle}>\n              <Card style={tempCardStyle}>\n                <CardContent>\n                  <h3>Demographics</h3>\n                  <p>\n                    Graduation Date:\n                    {` ${appData.grad_date}`}\n                  </p>\n                  <p>\n                    Gender:\n                    {` ${appData.gender ? appData.gender : appData.other_gender}`}\n                  </p>\n                  <p>\n                    Ethnicity:\n                    {` ${appData.ethnicity ? appData.ethnicity : appData.other_ethnicity}`}\n                  </p>\n                </CardContent>\n              </Card>\n              <Card style={tempCardStyle}>\n                <CardContent>\n                  <h3>Travel</h3>\n                  <p>\n                    College:\n                    {` ${appData.college}`}\n                  </p>\n                  <p>\n                    City:\n                    {` ${appData.city}`}\n                  </p>\n                </CardContent>\n              </Card>\n              <Card style={tempCardStyle}>\n                <CardContent>\n                  <h3>Contact</h3>\n                  <p>\n                    Email:\n                    {` ${appData.email}`}\n                  </p>\n                  <p>\n                    Phone:\n                    {` ${appData.phone}`}\n                  </p>\n                </CardContent>\n              </Card>\n              <Card style={tempCardStyle}>\n                <CardContent>\n                  <h3>Food</h3>\n                  <p>\n                    Diet:\n                    {` ${appData.diet}`}\n                  </p>\n                  <p>\n                    Allergies:\n                    {` ${appData.allergies}`}\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n          <h2>Experience</h2>\n          <h2>Short Answer</h2>\n          <h2>Misc</h2>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <h1>Error</h1>\n        <p>{errorMessage}</p>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    appData: state.app.data,\n    errorMessage: state.app.errorMessage,\n    fetching: state.app.fetching,\n  };\n}\n\nApplication.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  fetchApplications: PropTypes.func.isRequired,\n  appData: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  errorMessage: PropTypes.string,\n  fetching: PropTypes.bool.isRequired,\n};\n\nApplication.defaultProps = {\n  errorMessage: null,\n  appData: null,\n};\n\nexport default connect(mapStateToProps, { fetchApplications })(Application);\n","import * as types from './types';\nimport { firebase, applicationsRef } from '../config/firebase';\n\nexport const signUp = (values, callback) => (dispatch) => {\n  dispatch({ type: types.SIGN_UP_ATTEMPT });\n  firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\n    .then((userCredential) => {\n      firebase.auth().currentUser.sendEmailVerification()\n        .then(() => {\n          dispatch({ type: types.SIGN_UP_GUCCI, userCredential });\n          callback();\n        }).catch(error => dispatch({ type: types.SIGN_UP_FAIL, error }));\n    }).catch((error) => {\n      dispatch({ type: types.SIGN_UP_FAIL, error });\n    });\n};\n\nexport const login = values => (dispatch) => {\n  dispatch({ type: types.LOGIN_ATTEMPT });\n  firebase.auth().signInWithEmailAndPassword(values.email, values.password)\n    .then((userCredential) => {\n      const {\n        user: { emailVerified },\n      } = userCredential;\n      if (emailVerified) {\n        dispatch({ type: types.LOGIN_GUCCI, userCredential });\n      } else {\n        dispatch({ type: types.LOGIN_FAIL, error: { message: 'Email not verified, please verify your email.' } });\n      }\n    }).catch((error) => {\n      dispatch({ type: types.LOGIN_FAIL, error });\n    });\n};\n\nexport const forgotPassword = (values, callback) => (dispatch) => {\n  dispatch({ type: types.FORGOT_PASS_ATTEMPT });\n  firebase.auth().sendPasswordResetEmail(values.email)\n    .then((userCredential) => {\n      dispatch({ type: types.FORGOT_PASS_GUCCI, userCredential });\n      callback();\n    }).catch((error) => {\n      dispatch({ type: types.FORGOT_PASS_FAIL, error });\n    });\n};\n\nexport const signout = () => (dispatch) => {\n  firebase.auth().signOut()\n    .then(() => {\n      dispatch({ type: types.SIGN_OUT_GUCCI });\n    })\n    .catch((error) => {\n      dispatch({ type: types.SIGN_OUT_FAIL, error });\n    });\n};\n\nexport const fetchApplications = uid => (dispatch) => {\n  dispatch({ type: types.FETCH_ATTEMPT });\n  applicationsRef.doc(uid).get()\n    .then((application) => {\n      if (application.exists) {\n        const applicationData = application.data();\n        dispatch({ type: types.FETCH_GUCCI, data: applicationData });\n      } else {\n        dispatch({\n          type: types.FETCH_FAIL,\n          error: { message: 'Application does not exist.' },\n        });\n      }\n    })\n    .catch((error) => {\n      dispatch({ type: types.FETCH_FAIL, error });\n    });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput = ({\n  input,\n  type,\n  label,\n  disabled,\n  placeholder,\n  meta: { touched, error },\n}) => {\n  const errorExist = touched && Boolean(error);\n  return (\n    <TextField\n      type={type}\n      fullWidth\n      label={label}\n      helperText={errorExist ? error : ''}\n      error={errorExist}\n      {...input}\n      placeholder={placeholder}\n      disabled={disabled}\n      style={{ marginBottom: '1rem' }}\n    />\n  );\n};\n\n\nTextInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  input: PropTypes.shape({}).isRequired,\n  disabled: PropTypes.bool,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }).isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n};\nTextInput.defaultProps = {\n  placeholder: null,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport logo from '../assets/logo-white.png';\nimport theme from '../assets/theme.png';\n\nconst Scenic = () => (\n  <div id=\"scenic\" className=\"scenic\">\n    <section className=\"scenicContainer\">\n      <div className=\"scenicNav\">\n        <div className=\"scenicLogo\">\n          <a href=\"https://www.slohacks.com\">\n            <img src={logo} alt=\"SLO Hacks\" />\n          </a>\n        </div>\n      </div>\n      <div className=\"scenicContent\">\n        <div className=\"scenicTheme\">\n          <img src={theme} alt=\"Small Town, Big Ideas\" />\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nexport default Scenic;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { connect } from 'react-redux';\nimport { signUp } from '../actions/index';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  onSubmit(values) {\n    const { signUp: createAccount } = this.props;\n    createAccount(values, () => {\n      this.setState({ open: true });\n    });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n    const { history: { push } } = this.props;\n    push('/login');\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      valid,\n      errorMessage,\n      history: { push },\n    } = this.props;\n\n    const { open } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              Sign Up\n            </h1>\n\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n\n              <Field\n                label=\"Enter a password (8 or more characters)\"\n                name=\"password\"\n                type=\"password\"\n                component={TextInput}\n              />\n\n              <Field\n                label=\"Confirm Password\"\n                name=\"confirm_password\"\n                type=\"password\"\n                component={TextInput}\n              />\n\n              <Button variant=\"outlined\" color=\"primary\" disabled={!valid} type=\"submit\">\n                Sign up\n              </Button>\n\n              <Button\n                color=\"primary\"\n                type=\"button\"\n                onClick={() => push('/login')}\n                style={{ marginLeft: '1rem' }}\n              >\n                Back\n              </Button>\n            </form>\n\n            <Dialog onClose={this.handleClose} open={open}>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  To complete the sign up process, check your inbox for a link to verify your email.\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n\n            {errorMessage ? (\n              <FormHelperText error>\n                {errorMessage}\n              </FormHelperText>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  // Validate the inputs from 'values'\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Password must be 8 characters or more';\n  }\n  if (!values.confirm_password) {\n    errors.confirm_password = 'Confirm Password required';\n  } else if (values.confirm_password.length < 8) {\n    errors.confirm_password = 'Confirm Password must be 8 characters or more';\n  } else if (values.confirm_password.localeCompare(values.password)) {\n    errors.confirm_password = 'Passwords do not match';\n  }\n\n  if (!values.recaptcha) {\n    errors.recaptcha = 'reCAPTCHA must be checked';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return { auth: state.auth.authenticated, errorMessage: state.newUser.errorMessage };\n}\n\nSignUp.propTypes = {\n  signUp: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nSignUp.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'SignUpForm',\n})(\n  connect(mapStateToProps, { signUp })(SignUp),\n);\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\nimport { login } from '../actions/index';\n\nclass Login extends Component {\n  componentDidMount() {\n    const { auth } = this.props;\n\n    if (auth) {\n      console.log('Logged in!');\n    }\n  }\n\n  componentDidUpdate() {\n    const { auth } = this.props;\n\n    if (auth) {\n      console.log('Logged in!');\n    }\n  }\n\n  onSubmit(values) {\n    const { login: loginActionCreator } = this.props;\n    loginActionCreator(values);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      valid,\n      errorMessage,\n      loading,\n      history: { push },\n    } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              <span className=\"sh\">\n                SLO Hacks\n              </span>\n              <br />\n              Organizer Review\n            </h1>\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n              <Field\n                label=\"Enter a password (8 or more characters)\"\n                name=\"password\"\n                type=\"password\"\n                component={TextInput}\n              />\n              {errorMessage ? (\n                <FormHelperText style={{ marginBottom: '1rem' }} error>\n                  {errorMessage}\n                </FormHelperText>\n              ) : null}\n              {loading ? <CircularProgress color=\"primary\" /> : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  disabled={!valid}\n                  type=\"submit\"\n                  style={{ marginBottom: '1rem' }}\n                >\n                  Login\n                </Button>\n              )}\n            </form>\n\n            <div>\n              <Button onClick={() => push('/signup')} color=\"primary\" type=\"button\">\n                Sign Up\n              </Button>\n              <br />\n              <Button onClick={() => push('/forgotpassword')} color=\"primary\" type=\"button\">\n                Forgot Password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Invalid password';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth.authenticated,\n    errorMessage: state.auth.errorMessage,\n    loading: state.auth.loading,\n  };\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  auth: PropTypes.bool.isRequired,\n  history: PropTypes.shape().isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nLogin.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'LoginForm',\n})(\n  connect(mapStateToProps, { login })(Login),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { forgotPassword } from '../actions/index';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  onSubmit(values) {\n    const { forgotPassword: forgotPass } = this.props;\n    forgotPass(values, () => {\n      this.setState({ open: true });\n    });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const {\n      handleSubmit, errorMessage, valid, history: { push },\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              Forgot Password\n            </h1>\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={!valid}\n              >\n                Submit\n              </Button>\n\n              <Button color=\"primary\" type=\"button\" onClick={() => push('/login')} style={{ marginLeft: '1rem' }}>\n                Back\n              </Button>\n            </form>\n            <Dialog onClose={this.handleClose} open={open}>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    If the account exists, you will receive an email to reset your password.\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n\n            {errorMessage ? (\n              <FormHelperText error>\n                {errorMessage}\n              </FormHelperText>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  // Validate the inputs from 'values'\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return { auth: state.auth.authenticated, errorMessage: state.lostPass.errorMessage };\n}\n\nForgotPassword.propTypes = {\n  forgotPassword: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nForgotPassword.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'ForgotPasswordForm',\n})(\n  connect(mapStateToProps, { forgotPassword })(ForgotPassword),\n);\n","import React from 'react';\nimport Scenic from '../components/Scenic';\n\nconst NotFound = () => (\n  <div className=\"container\">\n    <div className=\"subContainer\">\n      <Scenic />\n    </div>\n    <div className=\"subContainer\">\n      <div className=\"containerPadding\">\n        <h1>\n          404 Page Not Found\n        </h1>\n        <p>\n          Hi friend! We couldn&apos;t find the page you were looking for.\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport ReduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport Application from './containers/Application';\nimport SignUp from './containers/SignUp';\nimport Login from './containers/Login';\nimport ForgotPassword from './containers/ForgotPassword';\nimport NotFound from './containers/NotFound';\n\nimport './index.css';\n\nconst createStoreWithMiddleware = createStore(\n  reducers,\n  {},\n  applyMiddleware(ReduxThunk),\n);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware}>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/application/:uid\" component={Application} />\n        <Route component={NotFound} />\n      </Switch>\n    </HashRouter>\n  </Provider>,\n  document.querySelector('.app'),\n);\n"],"sourceRoot":""}