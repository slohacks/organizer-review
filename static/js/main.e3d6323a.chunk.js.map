{"version":3,"sources":["assets/logo-white.png","assets/theme.png","index.js","reducers/auth.js","reducers/signup.js","reducers/forgotPassword.js","reducers/application.js","reducers/index.js","actions/types.js","config/firebase.js","containers/Application.jsx","actions/index.js","components/InputTypes/TextInput.jsx","components/Scenic.jsx","containers/SignUp.jsx","containers/Login.jsx","containers/ForgotPassword.jsx","containers/NotFound.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","require","INITIAL_STATE","authenticated","user","completedApplication","error","errorMessage","loading","fetchingApplication","fetchingResume","data","resumeMetadata","resumeUrl","errorApplication","errorApplicationMessage","errorResume","errorResumeMessage","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","Object","objectSpread","userCredential","message","newUser","lostPass","app","metadata","url","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","applicationsRef","collection","handleUndefinedField","s","handleUndefinedFieldWithOther","o","parseGradDate","date","dateArr","split","concat","parseInt","Application","_this$props","this","props","fetchApps","fetchApplications","fetchResume","getResume","uid","match","params","_this$props2","appData","react_default","a","createElement","CircularProgress_default","name","className","Card_default","CardContent_default","List_default","ListItem_default","ListItemText_default","primary","secondary","grad_date","gender","other_gender","ethnicity","other_ethnicity","college","button","city","component","href","target","rel","email","phoneNumber","diet","allergies","resume","size","toFixed","CardActions_default","Button_default","disabled","github","linkedin","website","other_link","challenge","project","misc","Component","defaultProps","connect","dispatch","doc","get","then","application","exists","applicationData","catch","storage","ref","child","getMetadata","getDownloadURL","TextInput","_ref","input","label","placeholder","_ref$meta","meta","touched","errorExist","Boolean","TextField_default","assign","fullWidth","helperText","style","marginBottom","Scenic","id","src","logo","alt","theme","SignUp","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","handleClose","bind","assertThisInitialized","values","_this2","createAccount","signUp","setState","push","history","handleSubmit","valid","components_Scenic","onSubmit","Field","variant","color","onClick","marginLeft","Dialog_default","onClose","DialogContent_default","DialogContentText_default","FormHelperText_default","reduxForm","validate","errors","test","password","confirm_password","localeCompare","recaptcha","callback","createUserWithEmailAndPassword","currentUser","sendEmailVerification","Login","console","log","loginActionCreator","login","signInWithEmailAndPassword","emailVerified","ForgotPassword","forgotPass","forgotPassword","sendPasswordResetEmail","NotFound","createStoreWithMiddleware","createStore","reducers","applyMiddleware","ReduxThunk","ReactDOM","render","es","store","HashRouter","Switch","Route","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.e3d6323a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.9a0ff8b1.png\";","module.exports = __webpack_public_path__ + \"static/media/theme.3b4ac690.png\";","require('./index.jsx');","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  user: {},\n  completedApplication: false,\n  error: false,\n  errorMessage: '',\n  loading: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.LOGIN_ATTEMPT:\n      return {\n        ...state,\n        error: false,\n        errorMessage: '',\n        loading: true,\n      };\n    case types.LOGIN_GUCCI:\n      return {\n        ...state,\n        authenticated: true,\n        error: false,\n        user: action.userCredential.user,\n        loading: false,\n      };\n    case types.LOGIN_FAIL:\n      return {\n        ...state,\n        error: true,\n        errorMessage: action.error.message,\n        loading: false,\n      };\n    case types.SIGN_OUT_GUCCI:\n      return {\n        ...state,\n        authenticated: false,\n        error: false,\n        user: {},\n      };\n    case types.SIGN_OUT_FAIL:\n      return {\n        ...state,\n        error: true,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  error: false,\n  errorMessage: '',\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SIGN_UP_ATTEMPT:\n      return {\n        ...state,\n        errorMessage: '',\n      };\n    case types.SIGN_UP_FAIL:\n      return {\n        ...state,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  error: false,\n  errorMessage: '',\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.FORGOT_PASS_ATTEMPT:\n      return {\n        ...state,\n        errorMessage: '',\n      };\n    case types.FORGOT_PASS_FAIL:\n      return {\n        ...state,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  fetchingApplication: true,\n  fetchingResume: true,\n  data: null,\n  resumeMetadata: null,\n  resumeUrl: null,\n  errorApplication: false,\n  errorApplicationMessage: '',\n  errorResume: false,\n  errorResumeMessage: '',\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.FETCH_GUCCI:\n      return {\n        ...state,\n        data: action.data,\n        fetchingApplication: false,\n      };\n    case types.FETCH_FAIL:\n      return {\n        ...state,\n        errorApplication: true,\n        errorApplicationMessage: action.error.message,\n        fetchingApplication: false,\n      };\n    case types.RESUME_GUCCI:\n      return {\n        ...state,\n        resumeMetadata: action.metadata,\n        resumeUrl: action.url,\n        fetchingResume: false,\n      };\n    case types.RESUME_FAIL:\n      return {\n        ...state,\n        errorResume: true,\n        errorResumeMessage: action.error.message,\n        fetchingResume: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authentication from './auth';\nimport signup from './signup';\nimport forgotPassword from './forgotPassword';\nimport application from './application';\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  auth: authentication,\n  newUser: signup,\n  lostPass: forgotPassword,\n  app: application,\n});\n\nexport default rootReducer;\n","export const LOGIN_ATTEMPT = 'login_attempt';\nexport const LOGIN_GUCCI = 'login_gucci';\nexport const LOGIN_FAIL = 'login_fail';\nexport const FORGOT_PASS_ATTEMPT = 'forgot_pass_attempt';\nexport const FORGOT_PASS_GUCCI = 'forgot_pass_gucci';\nexport const FORGOT_PASS_FAIL = 'forgot_pass_fail';\nexport const SIGN_UP_ATTEMPT = 'sign_up_attempt';\nexport const SIGN_UP_GUCCI = 'sign_up_gucci';\nexport const SIGN_UP_FAIL = 'sign_up_fail';\nexport const SIGN_OUT_GUCCI = 'sign_out_gucci';\nexport const SIGN_OUT_FAIL = 'sign_out_fail';\nexport const FETCH_ATTEMPT = 'fetch_attempt';\nexport const FETCH_GUCCI = 'fetch_gucci';\nexport const FETCH_FAIL = 'fetch_fail';\nexport const RESUME_ATTEMPT = 'resume_attempt';\nexport const RESUME_GUCCI = 'resume_gucci';\nexport const RESUME_FAIL = 'resume_fail';\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: 'AIzaSyBZcbyksEiROWXdBuRTzASzIDrUbttTwJk',\n  authDomain: 'attendee-application.firebaseapp.com',\n  databaseURL: 'https://attendee-application.firebaseio.com',\n  projectId: 'attendee-application',\n  storageBucket: 'attendee-application.appspot.com',\n  messagingSenderId: '667136836888',\n};\n\nfirebase.initializeApp(config);\n\nconst firestore = firebase.firestore();\n\nconst settings = {\n  timestampsInSnapshots: true,\n};\n\nfirestore.settings(settings);\n\nconst applicationsRef = firestore.collection('applications');\n\nexport { firebase, firestore, applicationsRef };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { fetchApplications, getResume } from '../actions/index';\nimport './Application.css';\n\nconst handleUndefinedField = s => (s || 'Not stated');\nconst handleUndefinedFieldWithOther = (s, o) => (s || handleUndefinedField(o));\nconst parseGradDate = (date) => {\n  if (date === undefined) return handleUndefinedField(date);\n\n  const months = ['Janurary', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const dateArr = date.split('-');\n\n  return `${months[parseInt(dateArr[1], 10) - 1]} ${dateArr[0]}`;\n};\n\nclass Application extends Component {\n  componentDidMount() {\n    const {\n      fetchApplications: fetchApps,\n      getResume: fetchResume,\n      match: { params: { uid } },\n    } = this.props;\n\n    fetchApps(uid);\n    fetchResume(uid);\n  }\n\n  render() {\n    const {\n      fetchingApplication,\n      fetchingResume,\n      appData,\n      resumeMetadata,\n      resumeUrl,\n      errorApplication,\n      errorApplicationMessage,\n      errorResume,\n      errorResumeMessage,\n    } = this.props;\n\n    if (fetchingApplication || fetchingResume) {\n      return (\n        <div>\n          <CircularProgress />\n        </div>\n      );\n    }\n\n    if (appData && (!errorApplication || !errorResume)) {\n      return (\n        <div>\n          <h1>{appData.name}</h1>\n          <section>\n            <h2>Personal Info</h2>\n            <div className=\"rowStyle\">\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Demographics</h3>\n                  <List>\n                    <ListItem>\n                      <ListItemText primary=\"Graduation Date\" secondary={parseGradDate(appData.grad_date)} />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemText primary=\"Gender\" secondary={handleUndefinedFieldWithOther(appData.gender, appData.other_gender)} />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemText primary=\"Ethnicity\" secondary={handleUndefinedFieldWithOther(appData.ethnicity, appData.other_ethnicity)} />\n                    </ListItem>\n                  </List>\n                </CardContent>\n              </Card>\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Travel</h3>\n                  <List>\n                    <ListItem>\n                      <ListItemText primary=\"College\" secondary={handleUndefinedField(appData.college)} />\n                    </ListItem>\n                    <ListItem\n                      button={appData.city !== undefined}\n                      component={appData.city ? 'a' : 'li'}\n                      href={appData.city ? `https://www.google.com/maps/place/${appData.city}` : ''}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <ListItemText primary=\"City\" secondary={handleUndefinedField(appData.city)} />\n                    </ListItem>\n                  </List>\n                </CardContent>\n              </Card>\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Contact</h3>\n                  <List>\n                    <ListItem button component=\"a\" href={`mailto:${appData.email}`}>\n                      <ListItemText primary=\"Email\" secondary={handleUndefinedField(appData.email)} />\n                    </ListItem>\n                    <ListItem\n                      button={appData.phoneNumber !== undefined}\n                      component={appData.phoneNumber ? 'a' : 'li'}\n                      href={appData.phoneNumber ? `tel:${appData.phoneNumber}` : ''}\n                    >\n                      <ListItemText primary=\"Phone\" secondary={handleUndefinedField(appData.phoneNumber)} />\n                    </ListItem>\n                  </List>\n                </CardContent>\n              </Card>\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Food</h3>\n                  <List>\n                    <ListItem>\n                      <ListItemText primary=\"Diet\" secondary={handleUndefinedField(appData.diet)} />\n                    </ListItem>\n                    <ListItemText primary=\"Allergies\" secondary={handleUndefinedField(appData.allergies)} />\n                  </List>\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n          <section>\n            <h2>Experience</h2>\n            <div className=\"rowStyle\">\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Resume</h3>\n                  <List>\n                    <ListItem>\n                      <ListItemText primary=\"Name\" secondary={appData.resume || 'N/A'} />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemText\n                        primary=\"Size\"\n                        secondary={resumeMetadata && resumeMetadata.size\n                          ? `${(parseInt(resumeMetadata.size, 10) / 1024 / 1024).toFixed(2)} mb`\n                          : 'N/A'}\n                      />\n                    </ListItem>\n                  </List>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    disabled={!resumeMetadata}\n                    component=\"a\"\n                    href={resumeUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Download\n                  </Button>\n                </CardActions>\n              </Card>\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Sites</h3>\n                  <List>\n                    <ListItem\n                      button={appData.github !== undefined}\n                      component={appData.github ? 'a' : 'li'}\n                      href={appData.github ? `https://github.com/${appData.github}` : ''}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <ListItemText primary=\"GitHub\" secondary={handleUndefinedField(appData.github)} />\n                    </ListItem>\n                    <ListItem\n                      button={appData.linkedin !== undefined}\n                      component={appData.linkedin ? 'a' : 'li'}\n                      href={appData.linkedin ? `https://www.linkedin.com/in/${appData.linkedin}` : ''}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <ListItemText primary=\"LinkedIn\" secondary={handleUndefinedField(appData.linkedin)} />\n                    </ListItem>\n                    <ListItem\n                      button={appData.website !== undefined}\n                      component={appData.website ? 'a' : 'li'}\n                      href={appData.website ? `${appData.website}` : ''}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <ListItemText primary=\"Personal Website\" secondary={handleUndefinedField(appData.website)} />\n                    </ListItem>\n                    <ListItem\n                      button={appData.other_link !== undefined}\n                      component={appData.other_link ? 'a' : 'li'}\n                      href={appData.other_link ? `${appData.other_link}` : ''}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <ListItemText primary=\"Other Link\" secondary={handleUndefinedField(appData.other_link)} />\n                    </ListItem>\n                  </List>\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n          <section>\n            <h2>Short Answer</h2>\n            <div className=\"rowStyle\">\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Challenge</h3>\n                  <p>\n                    {handleUndefinedField(appData.challenge)}\n                  </p>\n                </CardContent>\n              </Card>\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Project</h3>\n                  <p>\n                    {handleUndefinedField(appData.project)}\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n          <section>\n            <h2>Misc</h2>\n            <div className=\"rowStyle\">\n              <Card className=\"cardStyle\">\n                <CardContent>\n                  <h3 className=\"cardTitle\">Other Comments</h3>\n                  <p>\n                    {handleUndefinedField(appData.misc)}\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <h1>Error</h1>\n        {errorApplication\n          ? `<p>${errorApplicationMessage}</p>`\n          : ''}\n        {errorResume\n          ? `<p>${errorResumeMessage}</p>`\n          : ''}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    fetchingApplication: state.app.fetchingApplication,\n    fetchingResume: state.app.fetchingResume,\n    appData: state.app.data,\n    resumeMetadata: state.app.resumeMetadata,\n    resumeUrl: state.app.resumeUrl,\n    errorApplication: state.app.errorApplication,\n    errorResume: state.app.errorResume,\n    errorApplicationMessage: state.app.errorApplicationMessage,\n    errorResumeMessage: state.app.errorResumeMessage,\n  };\n}\n\nApplication.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  fetchApplications: PropTypes.func.isRequired,\n  getResume: PropTypes.func.isRequired,\n  appData: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  resumeMetadata: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  resumeUrl: PropTypes.string,\n  fetchingApplication: PropTypes.bool.isRequired,\n  fetchingResume: PropTypes.bool.isRequired,\n  errorApplication: PropTypes.bool.isRequired,\n  errorApplicationMessage: PropTypes.string,\n  errorResume: PropTypes.bool.isRequired,\n  errorResumeMessage: PropTypes.string,\n};\n\nApplication.defaultProps = {\n  appData: null,\n  resumeMetadata: null,\n  resumeUrl: null,\n  errorApplicationMessage: null,\n  errorResumeMessage: null,\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchApplications, getResume },\n)(Application);\n","import * as types from './types';\nimport { firebase, applicationsRef } from '../config/firebase';\n\nexport const signUp = (values, callback) => (dispatch) => {\n  dispatch({ type: types.SIGN_UP_ATTEMPT });\n  firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\n    .then((userCredential) => {\n      firebase.auth().currentUser.sendEmailVerification()\n        .then(() => {\n          dispatch({ type: types.SIGN_UP_GUCCI, userCredential });\n          callback();\n        }).catch(error => dispatch({ type: types.SIGN_UP_FAIL, error }));\n    }).catch((error) => {\n      dispatch({ type: types.SIGN_UP_FAIL, error });\n    });\n};\n\nexport const login = values => (dispatch) => {\n  dispatch({ type: types.LOGIN_ATTEMPT });\n  firebase.auth().signInWithEmailAndPassword(values.email, values.password)\n    .then((userCredential) => {\n      const {\n        user: { emailVerified },\n      } = userCredential;\n      if (emailVerified) {\n        dispatch({ type: types.LOGIN_GUCCI, userCredential });\n      } else {\n        dispatch({ type: types.LOGIN_FAIL, error: { message: 'Email not verified, please verify your email.' } });\n      }\n    }).catch((error) => {\n      dispatch({ type: types.LOGIN_FAIL, error });\n    });\n};\n\nexport const forgotPassword = (values, callback) => (dispatch) => {\n  dispatch({ type: types.FORGOT_PASS_ATTEMPT });\n  firebase.auth().sendPasswordResetEmail(values.email)\n    .then((userCredential) => {\n      dispatch({ type: types.FORGOT_PASS_GUCCI, userCredential });\n      callback();\n    }).catch((error) => {\n      dispatch({ type: types.FORGOT_PASS_FAIL, error });\n    });\n};\n\nexport const signout = () => (dispatch) => {\n  firebase.auth().signOut()\n    .then(() => {\n      dispatch({ type: types.SIGN_OUT_GUCCI });\n    })\n    .catch((error) => {\n      dispatch({ type: types.SIGN_OUT_FAIL, error });\n    });\n};\n\nexport const fetchApplications = uid => (dispatch) => {\n  dispatch({ type: types.FETCH_ATTEMPT });\n  applicationsRef.doc(uid).get()\n    .then((application) => {\n      if (application.exists) {\n        const applicationData = application.data();\n        dispatch({ type: types.FETCH_GUCCI, data: applicationData });\n      } else {\n        dispatch({\n          type: types.FETCH_FAIL,\n          error: { message: 'Application does not exist.' },\n        });\n      }\n    })\n    .catch((error) => {\n      dispatch({ type: types.FETCH_FAIL, error });\n    });\n};\n\nexport const getResume = uid => (dispatch) => {\n  dispatch({ type: types.RESUME_ATTEMPT });\n  firebase.storage().ref().child(`resumes/${uid}.pdf`).getMetadata()\n    .then((metadata) => {\n      firebase.storage().ref().child(`resumes/${uid}.pdf`).getDownloadURL()\n        .then((url) => {\n          dispatch({\n            type: types.RESUME_GUCCI,\n            metadata,\n            url,\n          });\n        })\n        .catch(error => dispatch({ type: types.RESUME_FAIL, error }));\n    })\n    .catch(error => dispatch({ type: types.RESUME_FAIL, error }));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput = ({\n  input,\n  type,\n  label,\n  disabled,\n  placeholder,\n  meta: { touched, error },\n}) => {\n  const errorExist = touched && Boolean(error);\n  return (\n    <TextField\n      type={type}\n      fullWidth\n      label={label}\n      helperText={errorExist ? error : ''}\n      error={errorExist}\n      {...input}\n      placeholder={placeholder}\n      disabled={disabled}\n      style={{ marginBottom: '1rem' }}\n    />\n  );\n};\n\n\nTextInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  input: PropTypes.shape({}).isRequired,\n  disabled: PropTypes.bool,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }).isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n};\nTextInput.defaultProps = {\n  placeholder: null,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport logo from '../assets/logo-white.png';\nimport theme from '../assets/theme.png';\n\nconst Scenic = () => (\n  <div id=\"scenic\" className=\"scenic\">\n    <section className=\"scenicContainer\">\n      <div className=\"scenicNav\">\n        <div className=\"scenicLogo\">\n          <a href=\"https://www.slohacks.com\">\n            <img src={logo} alt=\"SLO Hacks\" />\n          </a>\n        </div>\n      </div>\n      <div className=\"scenicContent\">\n        <div className=\"scenicTheme\">\n          <img src={theme} alt=\"Small Town, Big Ideas\" />\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nexport default Scenic;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { connect } from 'react-redux';\nimport { signUp } from '../actions/index';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  onSubmit(values) {\n    const { signUp: createAccount } = this.props;\n    createAccount(values, () => {\n      this.setState({ open: true });\n    });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n    const { history: { push } } = this.props;\n    push('/login');\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      valid,\n      errorMessage,\n      history: { push },\n    } = this.props;\n\n    const { open } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              Sign Up\n            </h1>\n\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n\n              <Field\n                label=\"Enter a password (8 or more characters)\"\n                name=\"password\"\n                type=\"password\"\n                component={TextInput}\n              />\n\n              <Field\n                label=\"Confirm Password\"\n                name=\"confirm_password\"\n                type=\"password\"\n                component={TextInput}\n              />\n\n              <Button variant=\"outlined\" color=\"primary\" disabled={!valid} type=\"submit\">\n                Sign up\n              </Button>\n\n              <Button\n                color=\"primary\"\n                type=\"button\"\n                onClick={() => push('/login')}\n                style={{ marginLeft: '1rem' }}\n              >\n                Back\n              </Button>\n            </form>\n\n            <Dialog onClose={this.handleClose} open={open}>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  To complete the sign up process, check your inbox for a link to verify your email.\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n\n            {errorMessage ? (\n              <FormHelperText error>\n                {errorMessage}\n              </FormHelperText>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  // Validate the inputs from 'values'\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Password must be 8 characters or more';\n  }\n  if (!values.confirm_password) {\n    errors.confirm_password = 'Confirm Password required';\n  } else if (values.confirm_password.length < 8) {\n    errors.confirm_password = 'Confirm Password must be 8 characters or more';\n  } else if (values.confirm_password.localeCompare(values.password)) {\n    errors.confirm_password = 'Passwords do not match';\n  }\n\n  if (!values.recaptcha) {\n    errors.recaptcha = 'reCAPTCHA must be checked';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return { auth: state.auth.authenticated, errorMessage: state.newUser.errorMessage };\n}\n\nSignUp.propTypes = {\n  signUp: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nSignUp.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'SignUpForm',\n})(\n  connect(mapStateToProps, { signUp })(SignUp),\n);\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\nimport { login } from '../actions/index';\n\nclass Login extends Component {\n  componentDidMount() {\n    const { auth } = this.props;\n\n    if (auth) {\n      console.log('Logged in!');\n    }\n  }\n\n  componentDidUpdate() {\n    const { auth } = this.props;\n\n    if (auth) {\n      console.log('Logged in!');\n    }\n  }\n\n  onSubmit(values) {\n    const { login: loginActionCreator } = this.props;\n    loginActionCreator(values);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      valid,\n      errorMessage,\n      loading,\n      history: { push },\n    } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              <span className=\"sh\">\n                SLO Hacks\n              </span>\n              <br />\n              Organizer Review\n            </h1>\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n              <Field\n                label=\"Enter a password (8 or more characters)\"\n                name=\"password\"\n                type=\"password\"\n                component={TextInput}\n              />\n              {errorMessage ? (\n                <FormHelperText style={{ marginBottom: '1rem' }} error>\n                  {errorMessage}\n                </FormHelperText>\n              ) : null}\n              {loading ? <CircularProgress color=\"primary\" /> : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  disabled={!valid}\n                  type=\"submit\"\n                  style={{ marginBottom: '1rem' }}\n                >\n                  Login\n                </Button>\n              )}\n            </form>\n\n            <div>\n              <Button onClick={() => push('/signup')} color=\"primary\" type=\"button\">\n                Sign Up\n              </Button>\n              <br />\n              <Button onClick={() => push('/forgotpassword')} color=\"primary\" type=\"button\">\n                Forgot Password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Invalid password';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth.authenticated,\n    errorMessage: state.auth.errorMessage,\n    loading: state.auth.loading,\n  };\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  auth: PropTypes.bool.isRequired,\n  history: PropTypes.shape().isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nLogin.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'LoginForm',\n})(\n  connect(mapStateToProps, { login })(Login),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { forgotPassword } from '../actions/index';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  onSubmit(values) {\n    const { forgotPassword: forgotPass } = this.props;\n    forgotPass(values, () => {\n      this.setState({ open: true });\n    });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const {\n      handleSubmit, errorMessage, valid, history: { push },\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              Forgot Password\n            </h1>\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={!valid}\n              >\n                Submit\n              </Button>\n\n              <Button color=\"primary\" type=\"button\" onClick={() => push('/login')} style={{ marginLeft: '1rem' }}>\n                Back\n              </Button>\n            </form>\n            <Dialog onClose={this.handleClose} open={open}>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    If the account exists, you will receive an email to reset your password.\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n\n            {errorMessage ? (\n              <FormHelperText error>\n                {errorMessage}\n              </FormHelperText>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  // Validate the inputs from 'values'\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return { auth: state.auth.authenticated, errorMessage: state.lostPass.errorMessage };\n}\n\nForgotPassword.propTypes = {\n  forgotPassword: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nForgotPassword.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'ForgotPasswordForm',\n})(\n  connect(mapStateToProps, { forgotPassword })(ForgotPassword),\n);\n","import React from 'react';\nimport Scenic from '../components/Scenic';\n\nconst NotFound = () => (\n  <div className=\"container\">\n    <div className=\"subContainer\">\n      <Scenic />\n    </div>\n    <div className=\"subContainer\">\n      <div className=\"containerPadding\">\n        <h1>\n          404 Page Not Found\n        </h1>\n        <p>\n          Hi friend! We couldn&apos;t find the page you were looking for.\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport ReduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport Application from './containers/Application';\nimport SignUp from './containers/SignUp';\nimport Login from './containers/Login';\nimport ForgotPassword from './containers/ForgotPassword';\nimport NotFound from './containers/NotFound';\n\nimport './index.css';\n\nconst createStoreWithMiddleware = createStore(\n  reducers,\n  {},\n  applyMiddleware(ReduxThunk),\n);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware}>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/application/:uid\" component={Application} />\n        <Route component={NotFound} />\n      </Switch>\n    </HashRouter>\n  </Provider>,\n  document.querySelector('.app'),\n);\n"],"sourceRoot":""}