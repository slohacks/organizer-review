{"version":3,"sources":["assets/logo-white.png","assets/theme.png","index.js","reducers/auth.js","reducers/signup.js","reducers/forgotPassword.js","reducers/index.js","actions/types.js","config/firebase.js","components/InputTypes/TextInput.jsx","components/Scenic.jsx","containers/SignUp.jsx","actions/index.js","containers/Login.jsx","containers/ForgotPassword.jsx","containers/NotFound.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","require","INITIAL_STATE","authenticated","user","completedApplication","error","errorMessage","loading","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","Object","objectSpread","userCredential","message","newUser","lostPass","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","collection","TextInput","_ref","input","label","disabled","placeholder","_ref$meta","meta","touched","errorExist","Boolean","react_default","a","createElement","TextField_default","assign","fullWidth","helperText","style","marginBottom","defaultProps","Scenic","id","className","href","src","logo","alt","theme","SignUp","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","open","handleClose","bind","assertThisInitialized","values","_this2","createAccount","signUp","setState","push","history","_this$props","handleSubmit","valid","components_Scenic","onSubmit","Field","name","component","Button_default","variant","color","onClick","marginLeft","Dialog_default","onClose","DialogContent_default","DialogContentText_default","FormHelperText_default","Component","reduxForm","validate","errors","email","test","password","confirm_password","localeCompare","recaptcha","connect","callback","dispatch","createUserWithEmailAndPassword","then","currentUser","sendEmailVerification","catch","Login","console","log","loginActionCreator","login","CircularProgress_default","signInWithEmailAndPassword","emailVerified","ForgotPassword","forgotPass","forgotPassword","sendPasswordResetEmail","NotFound","createStoreWithMiddleware","createStore","reducers","applyMiddleware","ReduxThunk","ReactDOM","render","es","store","HashRouter","Switch","Route","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.f1e3e9b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.9a0ff8b1.png\";","module.exports = __webpack_public_path__ + \"static/media/theme.3b4ac690.png\";","require('./index.jsx');","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  user: {},\n  completedApplication: false,\n  error: false,\n  errorMessage: '',\n  loading: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.LOGIN_ATTEMPT:\n      return {\n        ...state,\n        error: false,\n        errorMessage: '',\n        loading: true,\n      };\n    case types.LOGIN_GUCCI:\n      return {\n        ...state,\n        authenticated: true,\n        error: false,\n        user: action.userCredential.user,\n        loading: false,\n      };\n    case types.LOGIN_FAIL:\n      return {\n        ...state,\n        error: true,\n        errorMessage: action.error.message,\n        loading: false,\n      };\n    case types.SIGN_OUT_GUCCI:\n      return {\n        ...state,\n        authenticated: false,\n        error: false,\n        user: {},\n      };\n    case types.SIGN_OUT_FAIL:\n      return {\n        ...state,\n        error: true,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  error: false,\n  errorMessage: '',\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SIGN_UP_ATTEMPT:\n      return {\n        ...state,\n        errorMessage: '',\n      };\n    case types.SIGN_UP_FAIL:\n      return {\n        ...state,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import * as types from '../actions/types';\n\nconst INITIAL_STATE = {\n  error: false,\n  errorMessage: '',\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.FORGOT_PASS_ATTEMPT:\n      return {\n        ...state,\n        errorMessage: '',\n      };\n    case types.FORGOT_PASS_FAIL:\n      return {\n        ...state,\n        errorMessage: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authentication from './auth';\nimport signup from './signup';\nimport forgotPassword from './forgotPassword';\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  auth: authentication,\n  newUser: signup,\n  lostPass: forgotPassword,\n});\n\nexport default rootReducer;\n","export const LOGIN_ATTEMPT = 'login_attempt';\nexport const LOGIN_GUCCI = 'login_gucci';\nexport const LOGIN_FAIL = 'login_fail';\nexport const FORGOT_PASS_ATTEMPT = 'forgot_pass_attempt';\nexport const FORGOT_PASS_GUCCI = 'forgot_pass_gucci';\nexport const FORGOT_PASS_FAIL = 'forgot_pass_fail';\nexport const SIGN_UP_ATTEMPT = 'sign_up_attempt';\nexport const SIGN_UP_GUCCI = 'sign_up_gucci';\nexport const SIGN_UP_FAIL = 'sign_up_fail';\nexport const SIGN_OUT_GUCCI = 'sign_out_gucci';\nexport const SIGN_OUT_FAIL = 'sign_out_fail';\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: 'AIzaSyBZcbyksEiROWXdBuRTzASzIDrUbttTwJk',\n  authDomain: 'attendee-application.firebaseapp.com',\n  databaseURL: 'https://attendee-application.firebaseio.com',\n  projectId: 'attendee-application',\n  storageBucket: 'attendee-application.appspot.com',\n  messagingSenderId: '667136836888',\n};\n\nfirebase.initializeApp(config);\n\nconst firestore = firebase.firestore();\n\nconst settings = {\n  timestampsInSnapshots: true,\n};\n\nfirestore.settings(settings);\n\nconst applicationsRef = firestore.collection('applications');\n\nexport { firebase, firestore, applicationsRef };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput = ({\n  input,\n  type,\n  label,\n  disabled,\n  placeholder,\n  meta: { touched, error },\n}) => {\n  const errorExist = touched && Boolean(error);\n  return (\n    <TextField\n      type={type}\n      fullWidth\n      label={label}\n      helperText={errorExist ? error : ''}\n      error={errorExist}\n      {...input}\n      placeholder={placeholder}\n      disabled={disabled}\n      style={{ marginBottom: '1rem' }}\n    />\n  );\n};\n\n\nTextInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  input: PropTypes.shape({}).isRequired,\n  disabled: PropTypes.bool,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }).isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n};\nTextInput.defaultProps = {\n  placeholder: null,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport logo from '../assets/logo-white.png';\nimport theme from '../assets/theme.png';\n\nconst Scenic = () => (\n  <div id=\"scenic\" className=\"scenic\">\n    <section className=\"scenicContainer\">\n      <div className=\"scenicNav\">\n        <div className=\"scenicLogo\">\n          <a href=\"https://www.slohacks.com\">\n            <img src={logo} alt=\"SLO Hacks\" />\n          </a>\n        </div>\n      </div>\n      <div className=\"scenicContent\">\n        <div className=\"scenicTheme\">\n          <img src={theme} alt=\"Small Town, Big Ideas\" />\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nexport default Scenic;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { connect } from 'react-redux';\nimport { signUp } from '../actions/index';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  onSubmit(values) {\n    const { signUp: createAccount } = this.props;\n    createAccount(values, () => {\n      this.setState({ open: true });\n    });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n    const { history: { push } } = this.props;\n    push('/login');\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      valid,\n      errorMessage,\n      history: { push },\n    } = this.props;\n\n    const { open } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              Sign Up\n            </h1>\n\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n\n              <Field\n                label=\"Enter a password (8 or more characters)\"\n                name=\"password\"\n                type=\"password\"\n                component={TextInput}\n              />\n\n              <Field\n                label=\"Confirm Password\"\n                name=\"confirm_password\"\n                type=\"password\"\n                component={TextInput}\n              />\n\n              <Button variant=\"outlined\" color=\"primary\" disabled={!valid} type=\"submit\">\n                Sign up\n              </Button>\n\n              <Button\n                color=\"primary\"\n                type=\"button\"\n                onClick={() => push('/login')}\n                style={{ marginLeft: '1rem' }}\n              >\n                Back\n              </Button>\n            </form>\n\n            <Dialog onClose={this.handleClose} open={open}>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  To complete the sign up process, check your inbox for a link to verify your email.\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n\n            {errorMessage ? (\n              <FormHelperText error>\n                {errorMessage}\n              </FormHelperText>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  // Validate the inputs from 'values'\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Password must be 8 characters or more';\n  }\n  if (!values.confirm_password) {\n    errors.confirm_password = 'Confirm Password required';\n  } else if (values.confirm_password.length < 8) {\n    errors.confirm_password = 'Confirm Password must be 8 characters or more';\n  } else if (values.confirm_password.localeCompare(values.password)) {\n    errors.confirm_password = 'Passwords do not match';\n  }\n\n  if (!values.recaptcha) {\n    errors.recaptcha = 'reCAPTCHA must be checked';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return { auth: state.auth.authenticated, errorMessage: state.newUser.errorMessage };\n}\n\nSignUp.propTypes = {\n  signUp: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nSignUp.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'SignUpForm',\n})(\n  connect(mapStateToProps, { signUp })(SignUp),\n);\n","import * as types from './types';\nimport { firebase } from '../config/firebase';\n\nexport const signUp = (values, callback) => (dispatch) => {\n  dispatch({ type: types.SIGN_UP_ATTEMPT });\n  firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\n    .then((userCredential) => {\n      firebase.auth().currentUser.sendEmailVerification()\n        .then(() => {\n          dispatch({ type: types.SIGN_UP_GUCCI, userCredential });\n          callback();\n        }).catch(error => dispatch({ type: types.SIGN_UP_FAIL, error }));\n    }).catch((error) => {\n      dispatch({ type: types.SIGN_UP_FAIL, error });\n    });\n};\n\nexport const login = values => (dispatch) => {\n  dispatch({ type: types.LOGIN_ATTEMPT });\n  firebase.auth().signInWithEmailAndPassword(values.email, values.password)\n    .then((userCredential) => {\n      const {\n        user: { emailVerified },\n      } = userCredential;\n      if (emailVerified) {\n        dispatch({ type: types.LOGIN_GUCCI, userCredential });\n      } else {\n        dispatch({ type: types.LOGIN_FAIL, error: { message: 'Email not verified, please verify your email.' } });\n      }\n    }).catch((error) => {\n      dispatch({ type: types.LOGIN_FAIL, error });\n    });\n};\n\nexport const forgotPassword = (values, callback) => (dispatch) => {\n  dispatch({ type: types.FORGOT_PASS_ATTEMPT });\n  firebase.auth().sendPasswordResetEmail(values.email)\n    .then((userCredential) => {\n      dispatch({ type: types.FORGOT_PASS_GUCCI, userCredential });\n      callback();\n    }).catch((error) => {\n      dispatch({ type: types.FORGOT_PASS_FAIL, error });\n    });\n};\n\nexport const signout = () => (dispatch) => {\n  firebase.auth().signOut()\n    .then(() => {\n      dispatch({ type: types.SIGN_OUT_GUCCI });\n    })\n    .catch((error) => {\n      dispatch({ type: types.SIGN_OUT_FAIL, error });\n    });\n};\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\nimport { login } from '../actions/index';\n\nclass Login extends Component {\n  componentDidMount() {\n    const { auth } = this.props;\n\n    if (auth) {\n      console.log('Logged in!');\n    }\n  }\n\n  componentDidUpdate() {\n    const { auth } = this.props;\n\n    if (auth) {\n      console.log('Logged in!');\n    }\n  }\n\n  onSubmit(values) {\n    const { login: loginActionCreator } = this.props;\n    loginActionCreator(values);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      valid,\n      errorMessage,\n      loading,\n      history: { push },\n    } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              <span className=\"sh\">\n                SLO Hacks\n              </span>\n              <br />\n              Organizer Review\n            </h1>\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n              <Field\n                label=\"Enter a password (8 or more characters)\"\n                name=\"password\"\n                type=\"password\"\n                component={TextInput}\n              />\n              {errorMessage ? (\n                <FormHelperText style={{ marginBottom: '1rem' }} error>\n                  {errorMessage}\n                </FormHelperText>\n              ) : null}\n              {loading ? <CircularProgress color=\"primary\" /> : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  disabled={!valid}\n                  type=\"submit\"\n                  style={{ marginBottom: '1rem' }}\n                >\n                  Login\n                </Button>\n              )}\n            </form>\n\n            <div>\n              <Button onClick={() => push('/signup')} color=\"primary\" type=\"button\">\n                Sign Up\n              </Button>\n              <br />\n              <Button onClick={() => push('/forgotpassword')} color=\"primary\" type=\"button\">\n                Forgot Password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Invalid password';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth.authenticated,\n    errorMessage: state.auth.errorMessage,\n    loading: state.auth.loading,\n  };\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  auth: PropTypes.bool.isRequired,\n  history: PropTypes.shape().isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nLogin.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'LoginForm',\n})(\n  connect(mapStateToProps, { login })(Login),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { forgotPassword } from '../actions/index';\nimport TextInput from '../components/InputTypes/TextInput';\nimport Scenic from '../components/Scenic';\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  onSubmit(values) {\n    const { forgotPassword: forgotPass } = this.props;\n    forgotPass(values, () => {\n      this.setState({ open: true });\n    });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const {\n      handleSubmit, errorMessage, valid, history: { push },\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"subContainer\">\n          <Scenic />\n        </div>\n        <div className=\"subContainer\">\n          <div className=\"containerPadding\">\n            <h1>\n              Forgot Password\n            </h1>\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n              <Field\n                label=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                component={TextInput}\n              />\n\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={!valid}\n              >\n                Submit\n              </Button>\n\n              <Button color=\"primary\" type=\"button\" onClick={() => push('/login')} style={{ marginLeft: '1rem' }}>\n                Back\n              </Button>\n            </form>\n            <Dialog onClose={this.handleClose} open={open}>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    If the account exists, you will receive an email to reset your password.\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n\n            {errorMessage ? (\n              <FormHelperText error>\n                {errorMessage}\n              </FormHelperText>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  const re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  // Validate the inputs from 'values'\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!re.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return { auth: state.auth.authenticated, errorMessage: state.lostPass.errorMessage };\n}\n\nForgotPassword.propTypes = {\n  forgotPassword: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nForgotPassword.defaultProps = {\n  errorMessage: null,\n};\n\nexport default reduxForm({\n  validate,\n  form: 'ForgotPasswordForm',\n})(\n  connect(mapStateToProps, { forgotPassword })(ForgotPassword),\n);\n","import React from 'react';\nimport Scenic from '../components/Scenic';\n\nconst NotFound = () => (\n  <div className=\"container\">\n    <div className=\"subContainer\">\n      <Scenic />\n    </div>\n    <div className=\"subContainer\">\n      <div className=\"containerPadding\">\n        <h1>\n          404 Page Not Found\n        </h1>\n        <p>\n          Hi friend! We couldn&apos;t find the page you were looking for.\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport ReduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport SignUp from './containers/SignUp';\nimport Login from './containers/Login';\nimport ForgotPassword from './containers/ForgotPassword';\nimport NotFound from './containers/NotFound';\n\nimport './index.css';\n\nconst createStoreWithMiddleware = createStore(\n  reducers,\n  {},\n  applyMiddleware(ReduxThunk),\n);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware}>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/login\" component={Login} />\n        <Route component={NotFound} />\n      </Switch>\n    </HashRouter>\n  </Provider>,\n  document.querySelector('.app'),\n);\n"],"sourceRoot":""}